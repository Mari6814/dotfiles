# Mark this as loaded
export BASH_ALIASES="$HOME/.bash_aliases"
case $- in *i*) echo "bash_aliases: $BASH_ALIASES";; esac

# easy back cd command
alias ..="cd .."
# Virtaul env auto
function cd {
    builtin cd $1
    if [ -z "$VIRTUAL_ENV" ]; then
        if [ -f ./venv/bin/activate ]; then
            . ./venv/bin/activate
        fi
    else
        local CURRENT="$(realpath $(pwd))"
        local ROOT="$(realpath $VIRTUAL_ENV/..)"
        case $CURRENT/ in
            $ROOT/*) ;; # Still inside venv
            *) deactivate;; # Not in venv hierarchy anymore
        esac
    fi
}
# General aliases
function e {
    "$EDITOR" "$@"
}
# Edit bashrc
alias ebash="e ~/.bashrc && source ~/.bashrc"
# Edit profile
alias eprofile="e ~/.profile && source ~/.profile"
# Edit vim config
alias evim="e ~/.vimrc"
# Edit nvim config
alias envim="e ~/.config/nvim/init.vim"
# Edit bash aliases
alias ealias="e ~/.bash_aliases && source ~/.bash_aliases"
# keep tailing a file
alias follow="tail -f"
# Google something
alias g="googler --count 3"
# Search for a pattern in any file from the current cwd
alias contains="grep -rnw . -e"
# Youtube dl
alias youtube-mp3="youtube-dl --extract-audio --audio-format mp3"
# shortcut for nvidia-smi
alias smi=nvidia-smi

# Git shortcuts
alias gs="git status"
alias gp="git push"
alias gcam="git commit -am"

# Create executable bash script and edit it
function cmd {
    NAME="${1:?'Usage: cmd <cmdname>'}"
    [ -e $NAME ] && echo "Command already exists: $NAME" && return 1
    echo "Creating command: $NAME"
    echo '#!/bin/bash' >> "$NAME"
    e "$NAME"
    chmod +x "$NAME"
}

# Start recording the history and add it to an executable script file
function reccmd {
    FILE=${1:?'Usage reccmd <cmdname>'}
    [ -e $FILE ] && echo "Command already exists: $FILE" && return 1
    tee "$FILE" | (bash && chmod +x "$FILE")
}

# PYTHON
alias pip=pip3
alias python=python3
function jn { jupyter notebook --port ${1:-${PORT:-8888}}; }
alias jl="jupyter notebook list"
alias ipy=ipython
alias py=python
alias m3="python3 -m"
alias m="m3"

# Virtual Env / venv
function venv { python -m venv ${1:-venv} && vactivate; }
function vactivate { source ${1:-*}/bin/activate; }
alias ve=venv
alias va=vactivate
alias vd=deactivate

# NOTES
export NOTES_FILE="$HOME/notes.txt"
function note() { echo "$@" >> $NOTES_FILE; }
alias n=note
alias notes="cat $NOTES_FILE"
alias clrnotes="rm $NOTES_FILE"

# MASTERARBEIT CLUSTER LME
alias cluster="ssh $CLUSTER"
function lme() {
    if [ -z "$1" ]; then
        ssh $LME
    else
        local cmd="export PORT=$1; bash -l"
        ssh -tL $1:localhost:$1 "$LME" "$cmd"
    fi
}

# Secrets
function encrypt {
    [ -z "$1" ] && echo "usage: encrypt <outfile>" && return 1
    [ -e "$1" ] && echo "err: File $1 already exists." && return 1
    secret=$(openssl aes-256-cbc -e -a -salt -pbkdf2 -iter 100000)
    echo "#!/bin/sh" >> "$1"
    echo "echo $secret | openssl aes-256-cbc -d -a -salt -pbkdf2 -iter 100000 \$@" >> "$1"
    chmod +x "$1"
}

# Source machine local aliases
if [ -f $LOCAL/bash_aliases ]; then
    . "$LOCAL/bash_aliases"
fi
