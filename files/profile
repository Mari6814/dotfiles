# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# Mark this as loaded
export PROFILE="$HOME/.profile"

# General settings
shopt -s direxpand
shopt -s globstar
set -o vi

# Important global variables
export PROMPT_DIRTRIM=3
export EDITOR="nvim"
export LOCAL="$HOME/.local"


# A helper function that makes a new "local" directory.
# Adds subdirectories to appropiate paths
function make-local {
    local USAGE="usage: make-local [-h|--help] [--dir] <dir>"
    if [ $# -eq 0 ]; then
        echo "$USAGE" >&2
        return 0
    fi
    while test $# -gt 0; do
        case "$1" in
            -h|--help)
                echo "$USAGE" >&2
                return 0
                ;;
            -d|--dir)
                shift
                DIR="$1"
                ;;
            *)
                DIR="$1"
        esac
        shift
    done
    if [ -z "$DIR" ]; then
        echo "$USAGE" >&2
        return 1
    fi
    if [ ! -d "$DIR" ]; then
        echo "err: $DIR is not a directory" >&2
        return 1
    fi
    [ -d "$DIR/bin" ] && export PATH="$DIR/bin:$PATH"
    [ -d "$DIR/lib" ] && export LD_LIBRARY_PATH="$DIR/lib:$LD_LIBRARY_PATH"
    [ -d "$DIR/lib64" ] && export LD_LIBRARY_PATH="$DIR/lib64:$LD_LIBRARY_PATH"
    [ -d "$DIR/include" ] && export CPATH="$CPATH/include:$CPATH"
    [ -d "$DIR/man" ] && export MANPATH="$MANPATH/man:$MANPATH"
    [ -f "$DIR/bashrc" ] && source "$DIR/bashrc"
    [ -f "$DIR/profile" ] && source "$DIR/profile"
    [ -f "$DIR/bash_profile" ] && source "$DIR/bash_profile"
    [ -f "$DIR/bash_aliases" ] && source "$DIR/bash_aliases"
}

[ -d "$HOME/.local/bin" ] && make-local "$HOME/.local"

# FZF enable autocompletion
[ -f "/usr/share/doc/fzf/examples/key-bindings.bash" ] && . /usr/share/doc/fzf/examples/key-bindings.bash
[ -f "/usr/share/doc/fzf/examples/completion.bash" ] && . /usr/share/doc/fzf/examples/completion.bash
[ -f "~/.fzf.bash" ] && . ~/.fzf.bash

# Add Rust to path
[ -d "$HOME/.cargo/bin" ] && export PATH="$HOME/.cargo/bin:$PATH"
[ -f "$HOME/.cargo/env" ] && . "$HOME/.cargo/env"

# Set the npm package install dir
if command -v npm &> /dev/null; then
    export NPM_PREFIX="$HOME/.local/npm"
    if [ ! "$(npm config get prefix)" == "$NPM_PREFIX" ]; then
        echo "npm is installed: Setting install directory to $NPM_PREFIX" >&2
        npm config set prefix "$NPM_PREFIX"
    fi
    export PATH="$(npm config get prefix)/bin:$PATH"
fi

# source machine local profile
if [ -f "$HOME/.local/profile" ]; then
    . "$HOME/.local/profile"
fi

