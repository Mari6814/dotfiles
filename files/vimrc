set nocompatible
filetyp plugin on

call plug#begin('~/.vim/plugged')
Plug 'vim-airline/vim-airline'
" Plug 'tell-k/vim-autopep8'
" Plug 'rust-lang/rust.vim'
" Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/goyo.vim'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'airblade/vim-gitgutter'
Plug 'preservim/nerdtree'
Plug 'unblevable/quick-scope'
Plug 'easymotion/vim-easymotion'
if has('nvim')
    Plug 'neovim/nvim-lspconfig'
endif
call plug#end()

filetype plugin indent on

filetype plugin on
syntax on
filetype plugin indent on
colorscheme slate
set modelines=1
set number
set relativenumber
set visualbell
set ruler
set encoding=utf-8
set wrap
set textwidth=0
set formatoptions=tcqrn1
set tabstop=4
set shiftwidth=4
set expandtab
set showmode
set showcmd
set hlsearch
set incsearch
set ignorecase
set smartcase
set showmatch
set listchars=trail:·,nbsp:⎵,eol:¬,tab:▸\ ,extends:>,precedes:<
set list
set matchpairs+=<:>
set hidden
set wildmenu
set foldmethod=indent
set foldnestmax=10
set foldlevel=2
" Enable this option if pasting text into vim
set pastetoggle=<F2>
set ai
set wildignore+=**/node_modules/**,*.pyc,*.o,
set switchbuf=useopen,vsplit
" Specify python3 executable for some extension?
let g:python3_host_prog = "/usr/bin/python3"
" Forces block cursor for some terminals that don't have it already
let &t_ti.="\e[1 q"
let &t_SI.="\e[5 q"
let &t_EI.="\e[1 q"
let &t_te.="\e[0 q"

" Naviagte windows in normal mode by holding ctrl
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l
inoremap <C-j> <c-o><C-w>j
inoremap <C-k> <c-o><C-w>k
inoremap <C-h> <c-o><C-w>h
inoremap <C-l> <c-o><C-w>l

" Toggle folds using space
nnoremap <space> za

" Open nerd tree
nnoremap <Leader>b :NERDTree<CR>

" Closes the current buffer
noremap <leader>w :bd<cr>

" Open :ls and enter :b to start typing searched buffer
nnoremap gb :ls<cr>:b<space>

" Goto any file using ctrl+p behaviour
nnoremap <C-p> :CtrlP<CR>

" FZF configuration
" nmap <C-p> :FZF<CR>
" imap <C-p> <C-o>:FZF<CR>

augroup sessions
    au!
    " Automatically save sessions on exit in working dir
    au VimLeave * :mksession! .vim/Session.vim
    " Automatically save sessions on exit in global dir
    au VimLeave * :mksession! ~/.vim/Session.vim
augroup end

" Restore session using :Restore
command Restore source .vim/Session.vim

" Tab config
nnoremap <Leader>t :tabnew<CR>:ls<cr>:b<space>
nnoremap <Leader><TAB> :tabnext<CR>
nnoremap <Leader><S-TAB> :tabprevious<CR>

" Replace word under cursor
nnoremap <Leader>r :s/<C-r><C-w>//g<left><left>

" Search and replace the word under the cursor
nnoremap <Leader>R :%s/<C-r><C-w>//g<left><left>

" Search and replace incrementally; Use I_n to skip an instance; Use . to
" replace with same text
nnoremap <C-n> *Ncgn

" Search the pattern under the cursor in all files with the same extension as this one
nnoremap <F4> :execute ':vim /<C-r><C-w>/ **/*.' . expand('%:e')<CR>

" Remapping F keys for vimrc files
augroup vimrc
    autocmd!
    autocmd FileType vim noremap <F1> :help <C-r><C-w><CR>
    autocmd BufWritePost,FileWritePost .vimrc :so $HOME/.vimrc
augroup end
