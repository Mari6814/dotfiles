set nocompatible
filetyp plugin on

call plug#begin('~/.vim/plugged')
" Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/goyo.vim'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'terryma/vim-multiple-cursors'
Plug 'vim-airline/vim-airline'
Plug 'w0rp/ale'
Plug 'airblade/vim-gitgutter'
Plug 'tell-k/vim-autopep8'
Plug 'preservim/nerdtree'
Plug 'unblevable/quick-scope'
Plug 'easymotion/vim-easymotion'
Plug 'rust-lang/rust.vim'
call plug#end()

filetype plugin indent on

" FZF configuration
" nmap <C-p> :FZF<CR>
" imap <C-p> <C-o>:FZF<CR>

filetype plugin on
syntax on
filetype plugin indent on
colorscheme slate
set modelines=1
set number
set relativenumber
set visualbell
set ruler
set encoding=utf-8
set wrap
set textwidth=0
set formatoptions=tcqrn1
set tabstop=4
set shiftwidth=4
set expandtab
set showmode
set showcmd
set hlsearch
set incsearch
set ignorecase
set smartcase
set showmatch
set listchars=trail:·,nbsp:⎵,eol:¬,tab:▸\ ,extends:>,precedes:<
set list
set matchpairs+=<:>
set hidden
set wildmenu
set foldmethod=indent
set foldnestmax=10
set foldlevel=2
" Enable this option if pasting text into vim
set pastetoggle=<F2>
set ai
set wildignore+=**/node_modules/**,*.pyc,*.o,
set switchbuf=useopen,vsplit
" Specify python3 executable for some extension?
let g:python3_host_prog = "/usr/local/bin/python3"
" Forces block cursor for some terminals that don't have it already
let &t_ti.="\e[1 q"
let &t_SI.="\e[5 q"
let &t_EI.="\e[1 q"
let &t_te.="\e[0 q"

" Naviagte windows in normal mode by holding ctrl
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-h> <C-w>h
nmap <C-l> <C-w>l

" Toggle folds using space
nnoremap <space> za

" Open nerd tree
nnoremap <Leader>b :NERDTree<CR>

" Open :ls and enter :b to start typing searched buffer
nnoremap gb :ls<cr>:b<space>
" Goto any file using ctrl+p behaviour
nnoremap gp :CtrlP<CR>

" Automatically save sessions on exit in working dir
au VimLeave * :mksession! .vim/Session.vim
" Automatically save sessions on exit in global dir
au VimLeave * :mksession! ~/.vim/Session.vim

" Restore session using :Restore
command Restore source .vim/Session.vim
" Source current file
command Source source %
" Reload vimrc
command Reload source ~/.vimrc

" Tab config
nnoremap <Leader>t :tabnew<CR>
nnoremap <Leader><TAB> :tabnext<CR>
nnoremap <Leader><S-TAB> :tabprevious<CR>

" Splitting
nnoremap <Leader>h :split<CR>
nnoremap <Leader>s :vsplit<CR>

" Remapping F keys
noremap <F1> :help <C-r><C-w><CR>
noremap <F4> :execute ':vim /<C-r><C-w>/ **/*.' . expand('%:e')<CR>
noremap <F9> :Reload<CR>

" Mappings for quickfix motions
nnoremap [q :cn<CR>
nnoremap [Q :clast<CR>
nnoremap ]q :cp<CR>
nnoremap ]Q :cfirst<CR>

